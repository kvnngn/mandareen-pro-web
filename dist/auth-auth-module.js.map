{"version":3,"sources":["webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.routing.ts","webpack:///./src/app/auth/login/login.component.css","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/password/password.component.html","webpack:///./src/app/auth/password/password.component.ts","webpack:///./src/app/auth/register/register.component.html","webpack:///./src/app/auth/register/register.component.scss","webpack:///./src/app/auth/register/register.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import {NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RouterModule} from '@angular/router';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {ResetPasswordComponent} from './password/password.component';\r\nimport {AuthRoutes} from \"./auth.routing\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(AuthRoutes),\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    declarations: [\r\n        LoginComponent,\r\n        RegisterComponent,\r\n        ResetPasswordComponent,\r\n    ],\r\n    providers: [],\r\n    exports: [\r\n\r\n    ],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class AuthModule {\r\n}\r\n","import {Routes} from '@angular/router';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {ResetPasswordComponent} from './password/password.component';\r\n\r\n\r\nexport const AuthRoutes: Routes = [{\r\n    path: '',\r\n    children: [{\r\n        path: 'login',\r\n        component: LoginComponent\r\n    }, {\r\n        path: 'register',\r\n        component: RegisterComponent\r\n    }, {\r\n        path: 'resetpassword',\r\n        component: ResetPasswordComponent\r\n    }\r\n    ]\r\n}];\r\n\r\n","module.exports = \"h3.mandareen {\\r\\n    margin-top: 0;\\r\\n    font-weight: 900;\\r\\n    color: #fea617;\\r\\n}\\r\\n\\r\\nh3.account {\\r\\n    margin-bottom: 0;\\r\\n}\\r\\n\\r\\na.mandareen {\\r\\n    color: #fea617;\\r\\n}\\r\\n\\r\\na.mandareen:hover {\\r\\n    color: orangered;\\r\\n}\\r\\n\\r\\n.item > .content > .header {\\r\\n    color: #fea617;\\r\\n}\\r\\n\\r\\n.wrapper {\\r\\n    margin-top: -7%;\\r\\n    padding-top: 5%;\\r\\n    background: url('bg.jpg') no-repeat center;\\r\\n    background-size: 100% 100%;\\r\\n    background-position: top center;\\r\\n}\\r\\n\\r\\n.ui.header {\\r\\n    color: white;\\r\\n}\\r\\n\"","module.exports = \"<authnavbar-cmp></authnavbar-cmp>\\r\\n\\r\\n<div class=\\\"wrapper wrapper-full-page\\\">\\r\\n    <div class=\\\"full-page login-page register-page\\\" data-color=\\\"azure\\\">\\r\\n        <div class=\\\"content\\\">\\r\\n            <div class=\\\"ui container\\\">\\r\\n\\r\\n                <h1 class=\\\"ui header\\\">Bienvenue sur Mandareen Pro</h1>\\r\\n\\r\\n                <div class=\\\"ui stackable grid two column\\\">\\r\\n                    <div class=\\\"ui column\\\"><!-- col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3 -->\\r\\n                        <div class=\\\"ui segments\\\">\\r\\n                            <div class=\\\"ui segment\\\">\\r\\n                                <div class=\\\"ui grid\\\">\\r\\n                                    <div class=\\\"ui three wide column\\\">\\r\\n                                        <img src=\\\"./assets/img/Mandareen-logo.png\\\" width=\\\"100%\\\">\\r\\n                                    </div>\\r\\n                                    <div class=\\\"ui thirteen wide column\\\">\\r\\n                                        <h3 class=\\\"account\\\">Accéder à mon compte</h3>\\r\\n                                        <h3 class=\\\"mandareen\\\">Mandareen PRO</h3>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"ui segment ui form\\\">\\r\\n                                <div class=\\\"ui field\\\">\\r\\n                                    <label>Adresse mail</label>\\r\\n                                    <input type=\\\"email\\\"\\r\\n                                           placeholder=\\\"nom@email.com\\\"\\r\\n                                           [(ngModel)]=\\\"pro.email\\\"\\r\\n                                           required>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"ui field\\\">\\r\\n                                    <label>Mot de passe</label>\\r\\n                                    <input type=\\\"password\\\"\\r\\n                                           placeholder=\\\"Mot de passe\\\"\\r\\n                                           [(ngModel)]=\\\"pro.password\\\"\\r\\n                                           required>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"ui segment center aligned\\\">\\r\\n                                <button type=\\\"submit\\\" class=\\\"ui inverted big orange button\\\" (click)=\\\"submit($event)\\\">\\r\\n                                    Se connecter\\r\\n                                </button><br>\\r\\n                                <a class=\\\"ui link mandareen\\\">Mot de passe oublié ?</a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"column\\\">\\r\\n                        <div class=\\\"ui segments\\\">\\r\\n                            <div class=\\\"ui segment\\\">\\r\\n                                <h3>Professionnel spécialisé en Trouble du Comportement Alimentaire ?</h3>\\r\\n                            </div>\\r\\n                            <div class=\\\"ui segment\\\">\\r\\n                                <div class=\\\"ui list\\\">\\r\\n                                    <div class=\\\"item\\\">\\r\\n                                        <i class=\\\"ui large user middle aligned orange icon circular inverted\\\"></i>\\r\\n                                        <div class=\\\"content\\\">\\r\\n                                            <div class=\\\"header\\\">\\r\\n                                                Contenu en cours de création\\r\\n                                            </div>\\r\\n                                            <div class=\\\"description\\\">\\r\\n                                                Contenu en cours de création\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"ui segment center aligned\\\">\\r\\n                                <a routerLink=\\\"/auth/register\\\" class=\\\"ui big button orange inverted\\\"\\r\\n                                   angulartics2On=\\\"click\\\"\\r\\n                                   angularticsCategory=\\\"Evenement\\\"\\r\\n                                   angularticsAction=\\\"Vers inscription\\\">\\r\\n                                    Je crée mon compte\\r\\n                                </a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<!--<loader-component *ngIf=\\\"loaderState\\\"></loader-component>-->\"","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {AuthenticationService} from '../../providers';\r\nimport {AlertService} from '../../providers/alert.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n    pro: any = {'email': '', 'password': ''};\r\n\r\n    constructor(private authenticationService: AuthenticationService,\r\n                private alertService: AlertService,\r\n                private router: Router) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    submit() {\r\n        if (this.pro.email && this.pro.password) {\r\n            this.authenticationService.login(this.pro).subscribe(\r\n                res => {\r\n                    let url = this.authenticationService.getHomeURL();\r\n                    if (localStorage.getItem('requestedURL')) {\r\n                        url = localStorage.getItem('requestedURL');\r\n                        localStorage.removeItem('requestedURL');\r\n                    }\r\n                    this.router.navigate([url]);\r\n                },\r\n                error => {\r\n                    console.log(error)\r\n                    if (error.error.error === 'invalid password') {\r\n                        this.alertService.alert('warning', 'Le mot de passe est incorrect !');\r\n                    }\r\n                    else if (error.error.error === 'pro not exist in DB') {\r\n                        this.alertService.alert('warning', 'Aucun utilisateur n\\'existe avec cette adresse mail');\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"wrapper wrapper-full-page\\\">\\r\\n    <div class=\\\"full-page login-page\\\" data-color=\\\"azure\\\" data-image=\\\"./assets/img/full-screen-image-3.jpg\\\">\\r\\n\\r\\n        <div class=\\\"content\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3\\\">\\r\\n                        <div class=\\\"card\\\">\\r\\n                            <div class=\\\"header\\\">Changer mon mot de passe</div>\\r\\n\\r\\n                            <div class=\\\"content\\\">\\r\\n                                <form [formGroup]=\\\"ResetForm\\\" (ngSubmit)=\\\"resetpassword(ResetForm.value)\\\">\\r\\n\\r\\n                                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':!email.valid && email.touched}\\\">\\r\\n                                        <label>Adresse mail</label>\\r\\n                                        <input type=\\\"email\\\"\\r\\n                                               name=\\\"email\\\"\\r\\n                                               class=\\\"form-control\\\"\\r\\n                                               placeholder=\\\"super.idel@email.com\\\"\\r\\n                                               required\\r\\n                                               [formControl]=\\\"ResetForm.controls['email']\\\"\\r\\n                                        >\\r\\n                                        <div *ngIf=\\\"email.hasError('required') && email.touched\\\"\\r\\n                                             class=\\\"alert alert-danger\\\">Votre email n'est pas reconnu .\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"text-center\\\">\\r\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-fill btn-info\\\" [disabled]=\\\"!ResetForm.valid\\\"> Ré-initialiser mon mot de passe </button>\\r\\n                                    </div>\\r\\n\\r\\n                                </form>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {RegisterComponent} from '../register/register.component';\r\n\r\n\r\ndeclare let $: any;\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'password-cmp',\r\n    templateUrl: './password.component.html'\r\n})\r\n\r\nexport class ResetPasswordComponent implements OnInit {\r\n    ResetForm: FormGroup;\r\n    public loaderState: boolean;\r\n    errorsFlagToMessages = {\r\n        AUTH_FAILED_WRONG_CREDENTIALS: 'Email ou mot de passe incorrect',\r\n        AUTH_FAILED_ACCOUNT_REVOKED: 'Votre compte est désactivé ou n\\'a pas encore été vérifié.',\r\n        AUTH_FAILED_CONFIG_IN_PROGRESS_TIER1: 'Vous n\\'avez pas terminé la configuration de votre compte.',\r\n        AUTH_FAILED_CONFIG_IN_PROGRESS_TIER2: 'Vous n\\'avez pas terminé la configuration de votre compte.',\r\n        AUTH_FAILED_CONFIG_IN_PROGRESS_TIER3: 'Vous n\\'avez pas terminé la configuration de votre compte.',\r\n        AUTH_FAILED_CONFIG_IN_PROGRESS_TIER4: 'Vous n\\'avez pas terminé la configuration de votre compte.',\r\n        AUTH_FAILED_CONFIG_IN_PROGRESS_GROUP_TIER1: 'Vous n\\'avez pas terminé la configuration de votre compte.',\r\n        AUTH_FAILED_CONFIG_IN_PROGRESS_GROUP_TIER2: 'Vous n\\'avez pas terminé la configuration de votre compte.',\r\n        AUTH_FAILED_DEMO_MODE: 'Vous êtes en mode démo sur un compte fictif. Veuillez vous enregistrer pour profiter de l\\'application.',\r\n        PASSPORT_FAILED: 'Erreur d\\'authentification, veuillez vous reconnecter.',\r\n        INCORRECT_PARAM_password: 'Le mot de passe entré n\\'est pas correct.',\r\n        INCORRECT_PARAM_FRAME_CONFLICTS: 'Une ou plusieurs plage horaires existantes sont en conflit avec votre nouvelle plage.',\r\n        STRIPE_ERROR_StripeCardError: 'La carte entrée carte n\\'est pas valide.',\r\n        DEMO_MODE: 'Vous êtes en mode démo. Veuillez souscrire pour profiter de l\\'application.',\r\n        NO_NETWORK: 'Vous ne semblez pas être connecté à internet.',\r\n        UNIQUE_colleague_email: 'L\\'adresse email du collègue entrée existe déjà. Demandez-lui s\\'il/elle ne s\\'est pas déjà inscrit(e).',\r\n        UNIQUE_email: 'L\\'adresse email est déjà utilisée.',\r\n        SEQUELIZE_ERROR_SequelizeValidationError_email: 'L\\'adresse email entrée n\\'est pas valide.',\r\n        INCORRECT_PARAM_website_url: 'L\\'adresse du site web entrée n\\'est pas valide'\r\n    };\r\n\r\n    constructor(private router: Router,\r\n                private  fb: FormBuilder) {\r\n        this.loaderState = false;\r\n        this.ResetForm = fb.group({\r\n            'email': [null, Validators.required]\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    resetpassword(value: any): void {\r\n    }\r\n\r\n    get email() {\r\n        return this.ResetForm.get('email');\r\n    }\r\n\r\n\r\n    loaderShow() {\r\n        this.loaderState = true;\r\n    }\r\n\r\n    loaderHide() {\r\n        this.loaderState = false;\r\n    }\r\n\r\n}\r\n","module.exports = \"<authnavbar-cmp></authnavbar-cmp>\\r\\n<div class=\\\"wrapper wrapper-full-page\\\">\\r\\n    <div class=\\\"full-page register-page\\\" data-color=\\\"azure\\\">\\r\\n        <div class=\\\"content\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n                <div class=\\\"ui stackable grid two column\\\">\\r\\n                    <div class=\\\"column\\\">\\r\\n                        <div class=\\\"ui segments\\\">\\r\\n                            <div class=\\\"ui segment\\\">\\r\\n                                <h3 class=\\\"ui header\\\">Entrez dans la communauté <b>Mandareen</b> !</h3>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"ui segment offres\\\">\\r\\n                                <h3 class=\\\"ui header\\\">Découvrez nos offres</h3>\\r\\n                                <p>Ce contenu sera bientôt disponible</p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"column\\\">\\r\\n                        <form [formGroup]=\\\"RegisterForm\\\" (ngSubmit)=\\\"register(RegisterForm.value)\\\" novalidate\\r\\n                              class=\\\"ui form\\\">\\r\\n                            <div class=\\\"ui segments\\\">\\r\\n                                <div class=\\\"ui segment\\\">\\r\\n                                    <h3 class=\\\"ui header\\\">\\r\\n                                        <img src=\\\"./assets/img/Mandareen-logo.png\\\" width=\\\"20%\\\">\\r\\n                                        <div class=\\\"content\\\">Je m'inscris sur Mandareen Pro</div>\\r\\n                                    </h3>\\r\\n                                </div>\\r\\n                                <div class=\\\"ui segment\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <select class=\\\"form-control\\\"\\r\\n                                                name=\\\"civility\\\"\\r\\n                                                placeholder=\\\"Civilité\\\"\\r\\n                                                [formControl]=\\\"RegisterForm.controls['civility']\\\">\\r\\n                                            <option value=\\\"M\\\">Monsieur</option>\\r\\n                                            <option value=\\\"F\\\">Madame</option>\\r\\n                                        </select>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"form-group\\\"\\r\\n                                         [ngClass]=\\\"{'has-error':!firstname.valid && firstname.touched}\\\">\\r\\n                                        <input type=\\\"text\\\"\\r\\n                                               name=\\\"firstname\\\"\\r\\n                                               class=\\\"form-control\\\"\\r\\n                                               placeholder=\\\"Prénom\\\"\\r\\n                                               [formControl]=\\\"RegisterForm.controls['firstname']\\\"/>\\r\\n                                        <div *ngIf=\\\"firstname.invalid && firstname.touched\\\"\\r\\n                                             class=\\\"help-block\\\">\\r\\n                                            Quel est votre prénom ?\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"form-group\\\"\\r\\n                                         [ngClass]=\\\"{ 'has-error': !lastname.valid && lastname.touched}\\\">\\r\\n                                        <input type=\\\"text\\\"\\r\\n                                               class=\\\"form-control\\\"\\r\\n                                               name=\\\"lastname\\\"\\r\\n                                               placeholder=\\\"Nom\\\"\\r\\n                                               [formControl]=\\\"RegisterForm.controls['lastname']\\\"/>\\r\\n                                        <div *ngIf=\\\"lastname.invalid && lastname.touched\\\"\\r\\n                                             class=\\\"help-block\\\">\\r\\n                                            Quel est votre nom de famille ?\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"form-group\\\"\\r\\n                                         [ngClass]=\\\"{ 'has-error': !adeli.valid && adeli.touched}\\\">\\r\\n                                        <input type=\\\"tel\\\"\\r\\n                                               class=\\\"form-control\\\"\\r\\n                                               name=\\\"adeli\\\"\\r\\n                                               placeholder=\\\"N° ADELI\\\"\\r\\n                                               [formControl]=\\\"RegisterForm.controls['adeli']\\\">\\r\\n                                        <div *ngIf=\\\"adeli.invalid && adeli.touched\\\" class=\\\"help-block\\\">\\r\\n                                            Votre n°ADELI doit avoir 9 chiffres, 11 si c'est un n°RPPS\\r\\n                                            (sans séparateurs)\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"form-group\\\"\\r\\n                                         [ngClass]=\\\"{ 'has-error': !phone.valid && phone.touched  }\\\">\\r\\n                                        <input type=\\\"phone\\\"\\r\\n                                               name=\\\"phone\\\"\\r\\n                                               placeholder=\\\"N° Téléphone portable\\\"\\r\\n                                               class=\\\"form-control\\\"\\r\\n                                               [formControl]=\\\"RegisterForm.controls['phone']\\\"/>\\r\\n                                        <div *ngIf=\\\"phone.touched && phone.invalid\\\" class=\\\"help-block\\\">\\r\\n                                            <div *ngIf=\\\"phone.errors.required\\\">\\r\\n                                                Le numéro de portable vous sert à recevoir\\r\\n                                                les notifications de rendez-vous;\\r\\n                                                Il doit comporter 10 chiffres mais pas de séparateurs\\r\\n                                            </div>\\r\\n                                            <div *ngIf=\\\"phone.errors.pattern\\\">\\r\\n                                                Le numéro de téléphone doit être un téléphone mobile\\r\\n                                                commencant par 06 ou 07.\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"form-group\\\"\\r\\n                                         [ngClass]=\\\"{ 'has-error': !city.valid && city.touched }\\\">\\r\\n                                        <input type=\\\"text\\\"\\r\\n                                               class=\\\"form-control\\\"\\r\\n                                               name=\\\"city\\\"\\r\\n                                               placeholder=\\\"Ville\\\"\\r\\n                                               [formControl]=\\\"RegisterForm.controls['city']\\\"/>\\r\\n                                        <div *ngIf=\\\"city.invalid && city.touched\\\" class=\\\"help-block\\\">\\r\\n                                            Veuillez indiquer votre ville\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"form-group\\\"\\r\\n                                         [ngClass]=\\\"{ 'has-error': !email.valid && email.touched }\\\">\\r\\n                                        <input type=\\\"email\\\"\\r\\n                                               class=\\\"form-control\\\"\\r\\n                                               name=\\\"email\\\"\\r\\n                                               placeholder=\\\"Adresse mail\\\"\\r\\n                                               [formControl]=\\\"RegisterForm.controls['email']\\\"/>\\r\\n                                        <div *ngIf=\\\"email.invalid && email.touched\\\" class=\\\"help-block\\\">\\r\\n                                            Votre email est votre identifiant principal et semble invalide\\r\\n                                        </div>\\r\\n\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"form-group\\\"\\r\\n                                         [ngClass]=\\\"{ 'has-error': password.invalid && password.touched }\\\">\\r\\n                                        <input type=\\\"password\\\"\\r\\n                                               class=\\\"form-control\\\"\\r\\n                                               name=\\\"password\\\"\\r\\n                                               placeholder=\\\"Mot de passe\\\"\\r\\n                                               [formControl]=\\\"RegisterForm.controls['password']\\\"/>\\r\\n                                        <div *ngIf=\\\"password.invalid && password.touched\\\"\\r\\n                                             class=\\\"help-block\\\">\\r\\n                                            Il faut un mot de passe pour sécuriser vos données\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"ui segment center aligned\\\">\\r\\n                                    <button type=\\\"submit\\\"\\r\\n                                            class=\\\"ui button orange inverted\\\"\\r\\n                                            [disabled]=\\\"RegisterForm.invalid\\\"\\r\\n                                            angulartics2On=\\\"click\\\"\\r\\n                                            angularticsCategory=\\\"Evenement\\\"\\r\\n                                            angularticsAction=\\\"Inscription\\\">\\r\\n                                        Je m'inscris !\\r\\n                                    </button>\\r\\n                                    <br>\\r\\n                                    <small>\\r\\n                                        En continuant, j'accepte que les conditions générales\\r\\n                                        de Mandareen SAS et d'être contacté(e) par les moyens ci-dessus\\r\\n                                        pour les besoins du service Mandareen PRO.\\r\\n                                    </small>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"text-left small-margin\\\">\\r\\n\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"full-page-background\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--<loader-component *ngIf=\\\"loaderState\\\"></loader-component>-->\\r\\n\"","module.exports = \"h3, h3 > .content {\\n  font-weight: bold;\\n  color: #fea617 !important; }\\n\\n.ui.segment.offres {\\n  min-height: 300px; }\\n\\n.wrapper {\\n  margin-top: -7%;\\n  padding-top: 5%;\\n  background: url('bg.jpg') no-repeat center;\\n  background-size: 100% 100%;\\n  background-position: top center; }\\n\"","import {Component} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {AuthenticationService} from '../../providers';\r\n\r\ndeclare let swal: any;\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'register-cmp',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent {\r\n    RegisterForm: FormGroup;\r\n    loading = false;\r\n    loaderState = 0;\r\n    today = Date.now();\r\n\r\n    constructor(private router: Router,\r\n                private  fb: FormBuilder,\r\n                private authenticationService: AuthenticationService) {\r\n        this.RegisterForm = fb.group({\r\n            civility: ['F', Validators.required],\r\n            firstname: [null, Validators.required],\r\n            lastname: [null, Validators.required],\r\n            city: [null, Validators.required],\r\n            adeli: [null, [Validators.required, Validators.pattern(/^[0-9]{9,11}$/)]],\r\n            phone: [null, [Validators.required, Validators.pattern(/^0[6-7][0-9]{8}$/)]],\r\n            email: [null, [Validators.required, Validators.email]],\r\n            password: [null, Validators.required],\r\n        });\r\n    }\r\n\r\n    get civility() { return this.RegisterForm.get('civility'); }\r\n\r\n    get firstname() { return this.RegisterForm.get('firstname'); }\r\n\r\n    get lastname() { return this.RegisterForm.get('lastname'); }\r\n\r\n    get adeli() { return this.RegisterForm.get('adeli'); }\r\n\r\n    get phone() { return this.RegisterForm.get('phone'); }\r\n\r\n    get email() { return this.RegisterForm.get('email'); }\r\n\r\n    get city() { return this.RegisterForm.get('city'); }\r\n\r\n    get password() { return this.RegisterForm.get('password'); }\r\n\r\n    register(formValues: any) {\r\n        this.loaderState++;\r\n        return this.authenticationService.signup(formValues)\r\n        .finally(() => this.loaderState--)\r\n        .subscribe(\r\n            () => {this.router.navigate(['/admin/home'])},\r\n            (err) => {\r\n                console.log(err);\r\n                let msg = '';\r\n                if (err.error === 'Email already used') {msg = 'L\\'email est déja utilisé par un autre professionel de santé';}\r\n                if (err.error === 'Name already used') {msg = 'Le nom et prénom sont déjà utilisés par autre professionel de santé';}\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\n"],"sourceRoot":""}