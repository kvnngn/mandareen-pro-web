{"version":3,"sources":["webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.routing.ts","webpack:///./src/app/auth/login/login.component.css","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/password/password.component.html","webpack:///./src/app/auth/password/password.component.ts","webpack:///./src/app/auth/register/register.component.html","webpack:///./src/app/auth/register/register.component.scss","webpack:///./src/app/auth/register/register.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import {NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ResetPasswordComponent} from './password/password.component';\nimport {AuthRoutes} from \"./auth.routing\";\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(AuthRoutes),\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        LoginComponent,\n        RegisterComponent,\n        ResetPasswordComponent,\n    ],\n    providers: [],\n    exports: [\n\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\n\nexport class AuthModule {\n}\n","import {Routes} from '@angular/router';\nimport {RegisterComponent} from './register/register.component';\nimport {LoginComponent} from './login/login.component';\nimport {ResetPasswordComponent} from './password/password.component';\n\n\nexport const AuthRoutes: Routes = [{\n    path: '',\n    children: [{\n        path: 'login',\n        component: LoginComponent\n    }, {\n        path: 'register',\n        component: RegisterComponent\n    }, {\n        path: 'resetpassword',\n        component: ResetPasswordComponent\n    }\n    ]\n}];\n\n","module.exports = \"h3.mandareen {\\n    margin-top: 0;\\n    font-weight: 900;\\n    color: #fea617;\\n}\\n\\nh3.account {\\n    margin-bottom: 0;\\n}\\n\\na.mandareen {\\n    color: #fea617;\\n}\\n\\na.mandareen:hover {\\n    color: orangered;\\n}\\n\\n.item > .content > .header {\\n    color: #fea617;\\n}\\n\\n.wrapper {\\n    margin-top: -7%;\\n    padding-top: 5%;\\n    background: url('bg.jpg') no-repeat center;\\n    background-size: 100% 100%;\\n    background-position: top center;\\n}\\n\\n.ui.header {\\n    color: white;\\n}\\n\"","module.exports = \"<authnavbar-cmp></authnavbar-cmp>\\n\\n<div class=\\\"wrapper wrapper-full-page\\\">\\n    <div class=\\\"full-page login-page register-page\\\" data-color=\\\"azure\\\">\\n        <div class=\\\"content\\\">\\n            <div class=\\\"ui container\\\">\\n\\n                <h1 class=\\\"ui header\\\">Bienvenue sur Mandareen Pro</h1>\\n\\n                <div class=\\\"ui stackable grid two column\\\">\\n                    <div class=\\\"ui column\\\"><!-- col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3 -->\\n                        <div class=\\\"ui segments\\\">\\n                            <div class=\\\"ui segment\\\">\\n                                <div class=\\\"ui grid\\\">\\n                                    <div class=\\\"ui three wide column\\\">\\n                                        <img src=\\\"./assets/img/Mandareen-logo.png\\\" width=\\\"100%\\\">\\n                                    </div>\\n                                    <div class=\\\"ui thirteen wide column\\\">\\n                                        <h3 class=\\\"account\\\">Accéder à mon compte</h3>\\n                                        <h3 class=\\\"mandareen\\\">Mandareen PRO</h3>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"ui segment ui form\\\">\\n                                <div class=\\\"ui field\\\">\\n                                    <label>Adresse mail</label>\\n                                    <input type=\\\"email\\\"\\n                                           placeholder=\\\"nom@email.com\\\"\\n                                           [(ngModel)]=\\\"pro.email\\\"\\n                                           required>\\n                                </div>\\n\\n                                <div class=\\\"ui field\\\">\\n                                    <label>Mot de passe</label>\\n                                    <input type=\\\"password\\\"\\n                                           placeholder=\\\"Mot de passe\\\"\\n                                           [(ngModel)]=\\\"pro.password\\\"\\n                                           required>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"ui segment center aligned\\\">\\n                                <button type=\\\"submit\\\" class=\\\"ui inverted big orange button\\\" (click)=\\\"submit()\\\">\\n                                    Se connecter\\n                                </button><br>\\n                                <a class=\\\"ui link mandareen\\\">Mot de passe oublié ?</a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"column\\\">\\n                        <div class=\\\"ui segments\\\">\\n                            <div class=\\\"ui segment\\\">\\n                                <h3>Professionnel spécialisé en Trouble du Comportement Alimentaire ?</h3>\\n                            </div>\\n                            <div class=\\\"ui segment\\\">\\n                                <div class=\\\"ui list\\\">\\n                                    <div class=\\\"item\\\">\\n                                        <i class=\\\"ui large user middle aligned orange icon circular inverted\\\"></i>\\n                                        <div class=\\\"content\\\">\\n                                            <div class=\\\"header\\\">\\n                                                Contenu en cours de création\\n                                            </div>\\n                                            <div class=\\\"description\\\">\\n                                                Contenu en cours de création\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"ui segment center aligned\\\">\\n                                <a routerLink=\\\"/auth/register\\\" class=\\\"ui big button orange inverted\\\"\\n                                   angulartics2On=\\\"click\\\"\\n                                   angularticsCategory=\\\"Evenement\\\"\\n                                   angularticsAction=\\\"Vers inscription\\\">\\n                                    Je crée mon compte\\n                                </a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!--<loader-component *ngIf=\\\"loaderState\\\"></loader-component>-->\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthenticationService} from '../../providers';\nimport {AlertService} from '../../providers/alert.service';\n\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n    pro: any = {'email': '', 'password': ''};\n\n    constructor(private authenticationService: AuthenticationService,\n                private alertService: AlertService,\n                private router: Router) {\n    }\n\n    ngOnInit() {\n    }\n\n    submit() {\n        if (this.pro.email && this.pro.password) {\n            this.authenticationService.login(this.pro).subscribe(\n                res => {\n                    let url = this.authenticationService.getHomeURL();\n                    if (localStorage.getItem('requestedURL')) {\n                        url = localStorage.getItem('requestedURL');\n                        localStorage.removeItem('requestedURL');\n                    }\n                    this.router.navigate([url]);\n                },\n                error => {\n                    console.log(error)\n                    if (error.error.error === 'invalid password') {\n                        this.alertService.alert('warning', 'Le mot de passe est incorrect !');\n                    }\n                    else if (error.error.error === 'pro not exist in DB') {\n                        this.alertService.alert('warning', 'Aucun utilisateur n\\'existe avec cette adresse mail');\n                    }\n                }\n            );\n        }\n    }\n}\n","module.exports = \"<div class=\\\"wrapper wrapper-full-page\\\">\\n    <div class=\\\"full-page login-page\\\" data-color=\\\"azure\\\" data-image=\\\"./assets/img/full-screen-image-3.jpg\\\">\\n\\n        <div class=\\\"content\\\">\\n            <div class=\\\"container\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-4 col-sm-6 col-md-offset-4 col-sm-offset-3\\\">\\n                        <div class=\\\"card\\\">\\n                            <div class=\\\"header\\\">Changer mon mot de passe</div>\\n\\n                            <div class=\\\"content\\\">\\n                                <form [formGroup]=\\\"ResetForm\\\" (ngSubmit)=\\\"resetpassword(ResetForm.value)\\\">\\n\\n                                    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':!email.valid && email.touched}\\\">\\n                                        <label>Adresse mail</label>\\n                                        <input type=\\\"email\\\"\\n                                               name=\\\"email\\\"\\n                                               class=\\\"form-control\\\"\\n                                               placeholder=\\\"super.idel@email.com\\\"\\n                                               required\\n                                               [formControl]=\\\"ResetForm.controls['email']\\\"\\n                                        >\\n                                        <div *ngIf=\\\"email.hasError('required') && email.touched\\\"\\n                                             class=\\\"alert alert-danger\\\">Votre email n'est pas reconnu .\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"text-center\\\">\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-fill btn-info\\\" [disabled]=\\\"!ResetForm.valid\\\"> Ré-initialiser mon mot de passe </button>\\n                                    </div>\\n\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {RegisterComponent} from '../register/register.component';\n\n\ndeclare let $: any;\n\n@Component({\n    moduleId: module.id,\n    selector: 'password-cmp',\n    templateUrl: './password.component.html'\n})\n\nexport class ResetPasswordComponent implements OnInit {\n    ResetForm: FormGroup;\n    public loaderState: boolean;\n    errorsFlagToMessages = {\n        AUTH_FAILED_WRONG_CREDENTIALS: 'Email ou mot de passe incorrect',\n        AUTH_FAILED_ACCOUNT_REVOKED: 'Votre compte est désactivé ou n\\'a pas encore été vérifié.',\n        AUTH_FAILED_CONFIG_IN_PROGRESS_TIER1: 'Vous n\\'avez pas terminé la configuration de votre compte.',\n        AUTH_FAILED_CONFIG_IN_PROGRESS_TIER2: 'Vous n\\'avez pas terminé la configuration de votre compte.',\n        AUTH_FAILED_CONFIG_IN_PROGRESS_TIER3: 'Vous n\\'avez pas terminé la configuration de votre compte.',\n        AUTH_FAILED_CONFIG_IN_PROGRESS_TIER4: 'Vous n\\'avez pas terminé la configuration de votre compte.',\n        AUTH_FAILED_CONFIG_IN_PROGRESS_GROUP_TIER1: 'Vous n\\'avez pas terminé la configuration de votre compte.',\n        AUTH_FAILED_CONFIG_IN_PROGRESS_GROUP_TIER2: 'Vous n\\'avez pas terminé la configuration de votre compte.',\n        AUTH_FAILED_DEMO_MODE: 'Vous êtes en mode démo sur un compte fictif. Veuillez vous enregistrer pour profiter de l\\'application.',\n        PASSPORT_FAILED: 'Erreur d\\'authentification, veuillez vous reconnecter.',\n        INCORRECT_PARAM_password: 'Le mot de passe entré n\\'est pas correct.',\n        INCORRECT_PARAM_FRAME_CONFLICTS: 'Une ou plusieurs plage horaires existantes sont en conflit avec votre nouvelle plage.',\n        STRIPE_ERROR_StripeCardError: 'La carte entrée carte n\\'est pas valide.',\n        DEMO_MODE: 'Vous êtes en mode démo. Veuillez souscrire pour profiter de l\\'application.',\n        NO_NETWORK: 'Vous ne semblez pas être connecté à internet.',\n        UNIQUE_colleague_email: 'L\\'adresse email du collègue entrée existe déjà. Demandez-lui s\\'il/elle ne s\\'est pas déjà inscrit(e).',\n        UNIQUE_email: 'L\\'adresse email est déjà utilisée.',\n        SEQUELIZE_ERROR_SequelizeValidationError_email: 'L\\'adresse email entrée n\\'est pas valide.',\n        INCORRECT_PARAM_website_url: 'L\\'adresse du site web entrée n\\'est pas valide'\n    };\n\n    constructor(private router: Router,\n                private  fb: FormBuilder) {\n        this.loaderState = false;\n        this.ResetForm = fb.group({\n            'email': [null, Validators.required]\n        });\n    }\n\n    ngOnInit() {\n\n    }\n\n    resetpassword(value: any): void {\n    }\n\n    get email() {\n        return this.ResetForm.get('email');\n    }\n\n\n    loaderShow() {\n        this.loaderState = true;\n    }\n\n    loaderHide() {\n        this.loaderState = false;\n    }\n\n}\n","module.exports = \"<authnavbar-cmp></authnavbar-cmp>\\n<div class=\\\"wrapper wrapper-full-page\\\">\\n    <div class=\\\"full-page register-page\\\" data-color=\\\"azure\\\">\\n        <div class=\\\"content\\\">\\n            <div class=\\\"container\\\">\\n                <div class=\\\"ui stackable grid two column\\\">\\n                    <div class=\\\"column\\\">\\n                        <div class=\\\"ui segments\\\">\\n                            <div class=\\\"ui segment\\\">\\n                                <h3 class=\\\"ui header\\\">Entrez dans la communauté <b>Mandareen</b> !</h3>\\n                            </div>\\n\\n                            <div class=\\\"ui segment offres\\\">\\n                                <h3 class=\\\"ui header\\\">Découvrez nos offres</h3>\\n                                <p>Ce contenu sera bientôt disponible</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"column\\\">\\n                        <form [formGroup]=\\\"RegisterForm\\\" (ngSubmit)=\\\"register(RegisterForm.value)\\\" novalidate\\n                              class=\\\"ui form\\\">\\n                            <div class=\\\"ui segments\\\">\\n                                <div class=\\\"ui segment\\\">\\n                                    <h3 class=\\\"ui header\\\">\\n                                        <img src=\\\"./assets/img/Mandareen-logo.png\\\" width=\\\"20%\\\">\\n                                        <div class=\\\"content\\\">Je m'inscris sur Mandareen Pro</div>\\n                                    </h3>\\n                                </div>\\n                                <div class=\\\"ui segment\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <select class=\\\"form-control\\\"\\n                                                name=\\\"civility\\\"\\n                                                placeholder=\\\"Civilité\\\"\\n                                                [formControl]=\\\"RegisterForm.controls['civility']\\\">\\n                                            <option value=\\\"M\\\">Monsieur</option>\\n                                            <option value=\\\"F\\\">Madame</option>\\n                                        </select>\\n                                    </div>\\n\\n                                    <div class=\\\"form-group\\\"\\n                                         [ngClass]=\\\"{'has-error':!firstname.valid && firstname.touched}\\\">\\n                                        <input type=\\\"text\\\"\\n                                               name=\\\"firstname\\\"\\n                                               class=\\\"form-control\\\"\\n                                               placeholder=\\\"Prénom\\\"\\n                                               [formControl]=\\\"RegisterForm.controls['firstname']\\\"/>\\n                                        <div *ngIf=\\\"firstname.invalid && firstname.touched\\\"\\n                                             class=\\\"help-block\\\">\\n                                            Quel est votre prénom ?\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"form-group\\\"\\n                                         [ngClass]=\\\"{ 'has-error': !lastname.valid && lastname.touched}\\\">\\n                                        <input type=\\\"text\\\"\\n                                               class=\\\"form-control\\\"\\n                                               name=\\\"lastname\\\"\\n                                               placeholder=\\\"Nom\\\"\\n                                               [formControl]=\\\"RegisterForm.controls['lastname']\\\"/>\\n                                        <div *ngIf=\\\"lastname.invalid && lastname.touched\\\"\\n                                             class=\\\"help-block\\\">\\n                                            Quel est votre nom de famille ?\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"form-group\\\"\\n                                         [ngClass]=\\\"{ 'has-error': !adeli.valid && adeli.touched}\\\">\\n                                        <input type=\\\"tel\\\"\\n                                               class=\\\"form-control\\\"\\n                                               name=\\\"adeli\\\"\\n                                               placeholder=\\\"N° ADELI\\\"\\n                                               [formControl]=\\\"RegisterForm.controls['adeli']\\\">\\n                                        <div *ngIf=\\\"adeli.invalid && adeli.touched\\\" class=\\\"help-block\\\">\\n                                            Votre n°ADELI doit avoir 9 chiffres, 11 si c'est un n°RPPS\\n                                            (sans séparateurs)\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"form-group\\\"\\n                                         [ngClass]=\\\"{ 'has-error': !phone.valid && phone.touched  }\\\">\\n                                        <input type=\\\"phone\\\"\\n                                               name=\\\"phone\\\"\\n                                               placeholder=\\\"N° Téléphone portable\\\"\\n                                               class=\\\"form-control\\\"\\n                                               [formControl]=\\\"RegisterForm.controls['phone']\\\"/>\\n                                        <div *ngIf=\\\"phone.touched && phone.invalid\\\" class=\\\"help-block\\\">\\n                                            <div *ngIf=\\\"phone.errors.required\\\">\\n                                                Le numéro de portable vous sert à recevoir\\n                                                les notifications de rendez-vous;\\n                                                Il doit comporter 10 chiffres mais pas de séparateurs\\n                                            </div>\\n                                            <div *ngIf=\\\"phone.errors.pattern\\\">\\n                                                Le numéro de téléphone doit être un téléphone mobile\\n                                                commencant par 06 ou 07.\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"form-group\\\"\\n                                         [ngClass]=\\\"{ 'has-error': !city.valid && city.touched }\\\">\\n                                        <input type=\\\"text\\\"\\n                                               class=\\\"form-control\\\"\\n                                               name=\\\"city\\\"\\n                                               placeholder=\\\"Ville\\\"\\n                                               [formControl]=\\\"RegisterForm.controls['city']\\\"/>\\n                                        <div *ngIf=\\\"city.invalid && city.touched\\\" class=\\\"help-block\\\">\\n                                            Veuillez indiquer votre ville\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"form-group\\\"\\n                                         [ngClass]=\\\"{ 'has-error': !email.valid && email.touched }\\\">\\n                                        <input type=\\\"email\\\"\\n                                               class=\\\"form-control\\\"\\n                                               name=\\\"email\\\"\\n                                               placeholder=\\\"Adresse mail\\\"\\n                                               [formControl]=\\\"RegisterForm.controls['email']\\\"/>\\n                                        <div *ngIf=\\\"email.invalid && email.touched\\\" class=\\\"help-block\\\">\\n                                            Votre email est votre identifiant principal et semble invalide\\n                                        </div>\\n\\n                                    </div>\\n\\n                                    <div class=\\\"form-group\\\"\\n                                         [ngClass]=\\\"{ 'has-error': password.invalid && password.touched }\\\">\\n                                        <input type=\\\"password\\\"\\n                                               class=\\\"form-control\\\"\\n                                               name=\\\"password\\\"\\n                                               placeholder=\\\"Mot de passe\\\"\\n                                               [formControl]=\\\"RegisterForm.controls['password']\\\"/>\\n                                        <div *ngIf=\\\"password.invalid && password.touched\\\"\\n                                             class=\\\"help-block\\\">\\n                                            Il faut un mot de passe pour sécuriser vos données\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"ui segment center aligned\\\">\\n                                    <button type=\\\"submit\\\"\\n                                            class=\\\"ui button orange inverted\\\"\\n                                            [disabled]=\\\"RegisterForm.invalid\\\"\\n                                            angulartics2On=\\\"click\\\"\\n                                            angularticsCategory=\\\"Evenement\\\"\\n                                            angularticsAction=\\\"Inscription\\\">\\n                                        Je m'inscris !\\n                                    </button>\\n                                    <br>\\n                                    <small>\\n                                        En continuant, j'accepte que les conditions générales\\n                                        de Mandareen SAS et d'être contacté(e) par les moyens ci-dessus\\n                                        pour les besoins du service Mandareen PRO.\\n                                    </small>\\n                                </div>\\n\\n                                <div class=\\\"text-left small-margin\\\">\\n\\n                                </div>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"full-page-background\\\"></div>\\n    </div>\\n</div>\\n\\n<!--<loader-component *ngIf=\\\"loaderState\\\"></loader-component>-->\\n\"","module.exports = \"h3, h3 > .content {\\n  font-weight: bold;\\n  color: #fea617 !important; }\\n\\n.ui.segment.offres {\\n  min-height: 300px; }\\n\\n.wrapper {\\n  margin-top: -7%;\\n  padding-top: 5%;\\n  background: url('bg.jpg') no-repeat center;\\n  background-size: 100% 100%;\\n  background-position: top center; }\\n\"","import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AuthenticationService} from '../../providers';\n\ndeclare let swal: any;\n\n@Component({\n    moduleId: module.id,\n    selector: 'register-cmp',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n    RegisterForm: FormGroup;\n    loading = false;\n    loaderState = 0;\n    today = Date.now();\n\n    constructor(private router: Router,\n                private  fb: FormBuilder,\n                private authenticationService: AuthenticationService) {\n        this.RegisterForm = fb.group({\n            civility: ['F', Validators.required],\n            firstname: [null, Validators.required],\n            lastname: [null, Validators.required],\n            city: [null, Validators.required],\n            adeli: [null, [Validators.required, Validators.pattern(/^[0-9]{9,11}$/)]],\n            phone: [null, [Validators.required, Validators.pattern(/^0[6-7][0-9]{8}$/)]],\n            email: [null, [Validators.required, Validators.email]],\n            password: [null, Validators.required],\n        });\n    }\n\n    get civility() { return this.RegisterForm.get('civility'); }\n\n    get firstname() { return this.RegisterForm.get('firstname'); }\n\n    get lastname() { return this.RegisterForm.get('lastname'); }\n\n    get adeli() { return this.RegisterForm.get('adeli'); }\n\n    get phone() { return this.RegisterForm.get('phone'); }\n\n    get email() { return this.RegisterForm.get('email'); }\n\n    get city() { return this.RegisterForm.get('city'); }\n\n    get password() { return this.RegisterForm.get('password'); }\n\n    register(formValues: any) {\n        this.loaderState++;\n        return this.authenticationService.signup(formValues)\n        .finally(() => this.loaderState--)\n        .subscribe(\n            () => {this.router.navigate(['/admin/home'])},\n            (err) => {\n                console.log(err);\n                let msg = '';\n                if (err.error === 'Email already used') {msg = 'L\\'email est déja utilisé par un autre professionel de santé';}\n                if (err.error === 'Name already used') {msg = 'Le nom et prénom sont déjà utilisés par autre professionel de santé';}\n            }\n        );\n    }\n}\n\n"],"sourceRoot":""}